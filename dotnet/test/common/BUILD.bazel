load("//dotnet:defs.bzl", "csharp_library", "dotnet_nunit_test_suite", "framework")

filegroup(
    name = "assembly-fixtures",
    testonly = True,
    srcs = [
        "AssemblyTeardown.cs",
    ],
    visibility = [
        "//dotnet/test:__subpackages__",
    ],
)

filegroup(
    name = "test-data",
    testonly = True,
    srcs = [],
    data = [
        "appconfig.json",
        "//common/src/web",
        "//java/test/org/openqa/selenium/environment:appserver",
        "//java/test/org/openqa/selenium/environment:keystore",
        "//javascript/atoms",
        "//third_party/closure/goog",
        "//third_party/js/selenium:webdriver_json",
    ],
    visibility = [
        "//dotnet/test:__subpackages__",
    ],
)

csharp_library(
    name = "fixtures",
    testonly = True,
    srcs = glob(
        ["**/*.cs"],
        exclude = [
            "**/*Test.cs",
            "**/*Tests.cs",
        ],
    ),
    private_deps = [
        framework("nuget", "NETStandard.Library"),
    ],
    target_frameworks = ["netstandard2.0"],
    visibility = [
        "//dotnet/test:__subpackages__",
    ],
    deps = [
        "//dotnet/src/webdriver",
        "@rules_dotnet//tools/runfiles",
        framework("nuget", "Newtonsoft.Json"),
        framework("nuget", "NUnit"),
    ],
)

dotnet_nunit_test_suite(
    name = "AllTests",
    size = "large",
    srcs = glob([
        "**/*Test.cs",
        "**/*Tests.cs",
    ]) + [
        ":assembly-fixtures",
    ],
    browsers = [
        # The first browser in this list is assumed to be the one that should
        # be used by default.
        "firefox",
        # "safari",  # Skipping safari for now
        "ie",
        "edge",
        "chrome",
    ],
    data = [
        ":test-data",
    ],
    private_deps = [
        framework("nuget", "NETStandard.Library"),
    ],
    target_frameworks = ["net7.0"],
    deps = [
        ":fixtures",
        "//dotnet/src/webdriver",
        framework("nuget", "BenderProxy"),
        framework("nuget", "Newtonsoft.Json"),
        framework("nuget", "NUnit"),
    ],
)
